# -*- coding: utf-8 -*-
"""Assignment_5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FQmu_dETDT0YOV6UDPjY8WneKnugyJCH

1. Write a function that computes the volume of a sphere given its radius.

The volume of a sphere is given as
4/3Ï€r3
"""

def vol_sphere(radius):
  return (4/3) * (3.14) * (radius**3)

#vol_sphere(2)
vol_sphere(5)

"""2. Write a function that checks whether a number is in a given range (inclusive of high and low)"""

def check_range(num,low,high):
  if num in range(low,high+1):
    print("{} is in the range between {} and {}".format(num,low,high))
  else:
    print("The Number is Outside the Range")

check_range(5,2,7)
#check_range(3,1,10)

"""For Boolean Expression:"""

def bool_range(num,low,high):
  return num in range(low,high+1)

bool_range(2,1,11)

"""3 . Write a Python function that accepts a string and calculates the number of upper case letters and lower case letters."""



"""4. Write a Python function that takes a list and returns a new list with unique elements of the first list."""

def unique_list(lst):
    # Also possible to use list(set())
    y = []
    for a in lst:
        if a not in y:
            y.append(a)
    return y

unique_list([1,1,1,1,2,2,3,3,3,3,4,5])

"""5 . Write a Python function to multiply all the numbers in a list."""

def multiplication(numbers):
    total = 1
    for a in numbers:
      total *= a
    return total

multiplication([1,2,3,-4])

"""6. Write a Python function that checks whether a passed string is palindrome or not.

Note: A palindrome is word, phrase, or sequence that reads the same backward as forward, e.g., madam or nurses run.
"""

def palindrome(a):
  a = a.replace(' ', '')
  return a == a[::-1] #Reverse Slicing

#palindrome('nurses run')
#palindrome('madam')
palindrome('abcba')

"""7 . Write a Python function to check whether a string is pangram or not."""

# pangram- Every Letter of Alphabet at least once
import string

def is_pangram(str1,alphabet = string.ascii_lowercase):
  alphaset = set(alphabet)
  return alphaset <= set(str1.lower())

is_pangram("The quick brown fox jumps over the lazy dog")
#string.ascii_lowercase